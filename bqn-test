#!/usr/bin/env bqn

⟨Green, Yellow, Red⟩ ⇐ •Import "../bqn-color/color.bqn"
⟨Join, Unlines, Words, Unwords⟩ ⇐ •Import "../bqn-code/lib/string.bqn"
⟨Split⟩ ⇐ •Import "../bqn-code/lib/strings.bqn" # TODO fix

nl ← @+10

title ← {
    c ← Green‿Yellow‿Red # colors
    d ← "·∘○"            # dots
    nl∾(∾c{𝕎𝕩}¨d)∾Green " bqn-test "∾(∾c{𝕎𝕩}¨○⌽d)∾nl
}

ListRecursiveFiles ← {
    l ← •file.List 𝕩             # files/directories
    P ← (𝕩∾"/")⊸∾                # prefix
    m ← 'd'=•file.Type¨P¨l       # mask
    d ← l/˜m                     # directories
    f ← l/˜((∨´1↓".bqn"⊸⍷)¨l)∧¬m # file
    (P¨f) ∾ ∾𝕊¨P¨d
}

TestSingleFile ← {
    l ← •file.Lines 𝕩                      # lines
    t ← "UnitTest"                         # target
    r ← "UnitTestActual"                   # replace
    m ← Unlines { r Join t Split 𝕩 }¨l     # modded file
    u ← {Unwords 1↓Words𝕩}¨ l/˜{⊑0∾˜t⍷𝕩}¨l # unit tests
    o ← "_temp"
    o •file.Chars ""
    •BQN m
    f ← 𝕩∾" summary: " # file name
    •Out f∾∾('x'=•file.Chars o)⊏⟨Red "○",Green "∘"⟩
    •file.Remove o
}

IncludesUnitTest ← { ∨´"UnitTest"⍷•file.Chars𝕩 }

main ← {
    •Out title
    TestSingleFile¨IncludesUnitTest¨⊸/ListRecursiveFiles 0⊑•args
    •Out ⟨⟩
}

main
