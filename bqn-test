#!/usr/bin/env bqn

c  ⇐ •Import "../bqn-color/color.bqn"
s  ⇐ •Import "../bqn-code/lib/string.bqn"
fs ⇐ •Import "../bqn-code/lib/file_system.bqn"

# Constants
nl     ← @+10 # new line
colors ← c.Green‿c.Yellow‿c.Red
dots   ← "∘○⌾"
cdots  ← colors{𝕎𝕩}¨dots# colored dots
title  ← nl∾(∾cdots)∾c.Green " bqn-test "∾(∾colors{𝕎𝕩}¨○⌽dots)∾nl

TestSingleFile ← {
    l   ← •file.Lines 𝕩                 # lines
    t   ← "UnitTest"                    # target
    r   ← "UnitTestActual"              # replace
    r2  ← "ExecuteHalf"                 # replace 2
    m   ← {⊑0∾˜"Unit"⍷𝕩}¨l              # mask for unit tests
    Ts  ← (¬·∨`'≡'⊸=)⊸/¨⌾(m⊸/)          # trim suffix
    mf  ← s.Unlines    t‿r ⊸s.Replace¨l # modded file
    mf2 ← s.Unlines Ts t‿r2⊸s.Replace¨l # modded file 2
    Op  ← {s.Unwords ¯1↓"≡" s.Split t‿r2 s.Replace 𝕩}
    u   ← {s.Unwords 1↓s.Words𝕩}¨l/˜m # unit tests
    o   ← "_temp"
    o •file.Chars ""
    •BQN mf
    f   ← 𝕨⊏""‿(𝕩∾" summary: ") # file name
    uts ← ".fx"⊐•file.Chars o   # unit test status (pass/(x)/fail)
    •file.Chars o
    ft  ← (nl⊸∾¨u)/˜2=uts # failing tests
    o •file.Chars ""
    •BQN mf2
    ce ← 1↓•file.Lines o # current evaluations
    fe ← ce/˜(≠ce)↑×uts  # failing evauations (only) # TODO look at the ≠res2↑
    •file.Remove o
    ∾f∾∾(uts⊏cdots)∾((c.Red¨ft)⋈¨(" currently: "⊸∾∘c.Yellow¨fe))∾((¬𝕨)∧×≠ft)⊏""‿nl
}

IncludesUnitTest ← { ∨´(∨´1↑"UnitFail"⊸⍷∨"UnitTest"⊸⍷)¨(¬·∨´"⇐"⊸⍷)¨⊸/•file.Lines𝕩 }

main ← {
    •Out title
    (c.Red "Must provide directory (`pwd` for current)") ! 0≠≠•args
    d ← 0⊑•args  # directory
    v ← 1<≠•args # verbose
    { v ? (c.Red "2nd argument must be '-v' (if specified)") ! "-v"≡⊑1⊏•args ; ∞ }
    out ← v⊸TestSingleFile¨∧IncludesUnitTest¨⊸/fs.ListRecursiveBQNFiles d
    { v ? •Out¨ out ; •Out ∾out }
    t ← •Fmt¨ ⊑+˝(+´˘dots⊸(=⌜))¨ out # totals
    •Out nl∾nl∾˜", " s.Join colors{𝕎𝕩}¨t∾¨" passed"‿" xfailed"‿" failed"
}

main
