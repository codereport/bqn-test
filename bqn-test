#!/usr/bin/env bqn

⟨Green, Yellow, Red⟩ ⇐ •Import "../bqn-color/color.bqn"
s ⇐ •Import "../bqn-code/lib/string.bqn"

nl ← @+10

title ← {
    c ← Green‿Yellow‿Red # colors
    d ← "·∘○"            # dots
    nl∾(∾c{𝕎𝕩}¨d)∾Green " bqn-test "∾(∾c{𝕎𝕩}¨○⌽d)∾nl
}

ListRecursiveFiles ← {
    l ← •file.List 𝕩             # files/directories
    P ← (𝕩∾"/")⊸∾                # prefix
    m ← 'd'=•file.Type¨P¨l       # mask
    d ← l/˜m                     # directories
    f ← l/˜((∨´1↓".bqn"⊸⍷)¨l)∧¬m # file
    (P¨f) ∾ ∾𝕊¨P¨d
}

TestSingleFile ← {
    l ← •file.Lines 𝕩                         # lines
    t ← "UnitTest"                            # target
    r ← "UnitTestActual"                      # replace
    m ← s.Unlines t‿r⊸s.Replace¨l             # modded file
    u ← {s.Unwords 1↓s.Words𝕩}¨l/˜{⊑0∾˜t⍷𝕩}¨l # unit tests
    o ← "_temp"
    o •file.Chars ""
    •BQN m
    f   ← 𝕩∾" summary: "    # file name
    res ← 'x'=•file.Chars o # results
    •Out f∾∾res⊏⟨Red "○",Green "∘"⟩
    •Out∘Red¨u/˜¬res
    •file.Remove o
}

IncludesUnitTest ← { ∨´(∨´"UnitTest"⊸⍷)¨(¬·∨´"⇐"⊸⍷)¨⊸/•file.Lines𝕩 }

main ← {
    •Out title
    TestSingleFile¨∧IncludesUnitTest¨⊸/ListRecursiveFiles 0⊑•args
    •Out ⟨⟩
}

main
